name: Tareas
description: 'Servicios de Tareas'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/task
    metadata:
      groupName: Tareas
      groupDescription: 'Servicios de Tareas'
      subgroup: ''
      subgroupDescription: ''
      title: 'Mostrar todas las tareas'
      description: 'Obtiene todas las tareas del usuario autenticado'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Numero de p치gina.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route danngos/public/api/task could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/task/{id}'
    metadata:
      groupName: Tareas
      groupDescription: 'Servicios de Tareas'
      subgroup: ''
      subgroupDescription: ''
      title: 'Mostrar una tarea'
      description: 'Muestra la informaci칩n de una tarea especifica para el usuario autenticado'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'El ID de la tarea.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route danngos/public/api/task/2 could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/task/{id}'
    metadata:
      groupName: Tareas
      groupDescription: 'Servicios de Tareas'
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar una tarea'
      description: 'Elimina una tarea especifica para el usuario autenticado'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'El ID de la tarea.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/task
    metadata:
      groupName: Tareas
      groupDescription: 'Servicios de Tareas'
      subgroup: ''
      subgroupDescription: ''
      title: 'Guardar una tarea'
      description: 'Guarda la informaci칩n de una tarea creada por el usuario autenticado'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nombre de la tarea.'
        required: false
        example: 'Desarrollar metodo de login'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Desarrollar metodo de login'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/task
    metadata:
      groupName: Tareas
      groupDescription: 'Servicios de Tareas'
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar una tarea'
      description: 'Actualiza la informaci칩n de una tarea especifica para el usuario autenticado'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      completed:
        name: completed
        description: 'Estado de la tarea.'
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      completed: true
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
